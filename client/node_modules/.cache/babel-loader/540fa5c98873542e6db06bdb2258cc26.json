{"ast":null,"code":"var _jsxFileName = \"/Users/ozshmuel/Desktop/Google Drive/CS/\\u05E9\\u05E0\\u05D4 \\u05D2/\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\u05F3/blockchain/project/election/client/src/contexts/CandidatesContext/CandidatesProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport useEth from \"../EthContext/useEth\";\nimport CandidatesContext from './CandidatesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CandidatesProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    state: {\n      contract\n    }\n  } = useEth();\n  const [candidates, setCandidates] = useState([]); // const { candidates, setCandidates} = useContext(CandidatesContext);\n\n  const readCandidates = async () => {\n    // console.log(contract);\n    const candidatesCount = await contract.methods.getCandidatesCount().call();\n    console.log(candidatesCount);\n\n    for (let i = 1; i <= candidatesCount; i++) {\n      const candidate = await contract.methods.candidates(i).call();\n      const cId = candidate[0];\n      const cName = candidate[1];\n      const cSlogan = candidate[2];\n      const cVoteCount = candidate[3];\n      setCandidates(candidates.push({\n        id: cId,\n        name: cName,\n        slogan: cSlogan,\n        voteCount: cVoteCount\n      }));\n    }\n  };\n\n  readCandidates();\n  return /*#__PURE__*/_jsxDEV(CandidatesContext.Provider, {\n    value: {\n      candidates,\n      setCandidates\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", candidates ? 'notYet' : 'Done', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), children, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" CandidatesProvider      \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: readCandidates,\n      children: \" readCandidates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 11\n  }, this) //   <h2>GetCandidates</h2>\n  //   <button onClick={readCandidates}>\n  //       GetCandidates()\n  //   </button>\n  ;\n}\n\n_s(CandidatesProvider, \"QeZ1XYSgwntYv//+OpKXfd2Y/NE=\", false, function () {\n  return [useEth];\n});\n\n_c = CandidatesProvider;\nexport default CandidatesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandidatesProvider\");","map":{"version":3,"names":["React","useState","useEffect","useEth","CandidatesContext","CandidatesProvider","children","state","contract","candidates","setCandidates","readCandidates","candidatesCount","methods","getCandidatesCount","call","console","log","i","candidate","cId","cName","cSlogan","cVoteCount","push","id","name","slogan","voteCount"],"sources":["/Users/ozshmuel/Desktop/Google Drive/CS/שנה ג/סמסטר ב׳/blockchain/project/election/client/src/contexts/CandidatesContext/CandidatesProvider.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport useEth from \"../EthContext/useEth\";\nimport CandidatesContext from './CandidatesContext';\n\n\nfunction CandidatesProvider({ children }) {\n\n    const { state: { contract } } = useEth();\n    const [candidates, setCandidates] = useState([]);\n\n    // const { candidates, setCandidates} = useContext(CandidatesContext);\n\n    const readCandidates = async () => {\n        \n        // console.log(contract);\n\n        const candidatesCount = await contract.methods.getCandidatesCount().call(); \n\n        console.log(candidatesCount);\n\n        for (let i=1; i<= candidatesCount; i++){\n            const candidate = await contract.methods.candidates(i).call();\n            const cId = candidate[0]\n            const cName = candidate[1];\n            const cSlogan = candidate[2];\n            const cVoteCount = candidate[3];\n            setCandidates(candidates\n                .push({ id: cId, name: cName, slogan: cSlogan, voteCount: cVoteCount}));        \n        }\n \n    } \n\n  readCandidates();\n\n\n\n  return (\n\n          \n          <CandidatesContext.Provider value={{\n              candidates,\n               setCandidates\n               }}>\n            <div> { candidates ? 'notYet' : 'Done' } </div>\n            { children }\n          <div> CandidatesProvider      </div>\n              <button type='button' onClick={readCandidates}> readCandidates</button>\n          </CandidatesContext.Provider> \n\n          \n        //   <h2>GetCandidates</h2>\n        //   <button onClick={readCandidates}>\n        //       GetCandidates()\n        //   </button>\n          \n        \n  )\n}\n\nexport default CandidatesProvider;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAGA,SAASC,kBAAT,OAA0C;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAEtC,MAAM;IAAEC,KAAK,EAAE;MAAEC;IAAF;EAAT,IAA0BL,MAAM,EAAtC;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CAHsC,CAKtC;;EAEA,MAAMU,cAAc,GAAG,YAAY;IAE/B;IAEA,MAAMC,eAAe,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiBC,kBAAjB,GAAsCC,IAAtC,EAA9B;IAEAC,OAAO,CAACC,GAAR,CAAYL,eAAZ;;IAEA,KAAK,IAAIM,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAGN,eAAlB,EAAmCM,CAAC,EAApC,EAAuC;MACnC,MAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACK,OAAT,CAAiBJ,UAAjB,CAA4BS,CAA5B,EAA+BH,IAA/B,EAAxB;MACA,MAAMK,GAAG,GAAGD,SAAS,CAAC,CAAD,CAArB;MACA,MAAME,KAAK,GAAGF,SAAS,CAAC,CAAD,CAAvB;MACA,MAAMG,OAAO,GAAGH,SAAS,CAAC,CAAD,CAAzB;MACA,MAAMI,UAAU,GAAGJ,SAAS,CAAC,CAAD,CAA5B;MACAT,aAAa,CAACD,UAAU,CACnBe,IADS,CACJ;QAAEC,EAAE,EAAEL,GAAN;QAAWM,IAAI,EAAEL,KAAjB;QAAwBM,MAAM,EAAEL,OAAhC;QAAyCM,SAAS,EAAEL;MAApD,CADI,CAAD,CAAb;IAEH;EAEJ,CAlBD;;EAoBFZ,cAAc;EAId,oBAGQ,QAAC,iBAAD,CAAmB,QAAnB;IAA4B,KAAK,EAAE;MAC/BF,UAD+B;MAE9BC;IAF8B,CAAnC;IAAA,wBAIE;MAAA,gBAAQD,UAAU,GAAG,QAAH,GAAc,MAAhC;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,EAKIH,QALJ,eAMA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANA,eAOI;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAEK,cAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAHR,CAcM;EACA;EACA;EACA;EAjBN;AAqBD;;GApDQN,kB;UAE2BF,M;;;KAF3BE,kB;AAsDT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}
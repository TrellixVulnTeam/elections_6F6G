{"ast":null,"code":"var _jsxFileName = \"/Users/ozshmuel/Desktop/Google Drive/CS/\\u05E9\\u05E0\\u05D4 \\u05D2/\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\u05F3/blockchain/project/election/client/src/components/Candidates/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\"; // import CandidatesContext from '../../contexts/CandidatesContext/CandidatesContext';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Candidates() {\n  _s();\n\n  const {\n    state: {\n      contract\n    }\n  } = useEth();\n  const [candidates, setCandidates] = useState([]); // const { candidates, setCandidates} = useContext(CandidatesContext);\n\n  const readCandidates = async () => {\n    const candidatesCount = await contract.methods.getCandidatesCount().call();\n\n    for (let i = 1; i <= candidatesCount; i++) {\n      const candidate = await contract.methods.candidates(i).call();\n      const cId = candidate[0];\n      const cName = candidate[1];\n      const cSlogan = candidate[2];\n      const cVoteCount = candidate[3];\n      setCandidates(candidates.push({\n        id: cId,\n        name: cName,\n        slogan: cSlogan,\n        voteCount: cVoteCount\n      }));\n    } // readCandidates();\n    // setTest({\n    //     id: candidate[0].toNumber(),\n    //     name: candidate[1],\n    //     slogan: candidate[2],\n    // });\n    // console.log(test);\n    // return test;\n\n\n    console.log(candidates);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GetCandidates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: readCandidates,\n      children: \"GetCandidates()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Candidates, \"QeZ1XYSgwntYv//+OpKXfd2Y/NE=\", false, function () {\n  return [useEth];\n});\n\n_c = Candidates;\nexport default Candidates;\n\nvar _c;\n\n$RefreshReg$(_c, \"Candidates\");","map":{"version":3,"names":["React","useState","useContext","useEth","Candidates","state","contract","candidates","setCandidates","readCandidates","candidatesCount","methods","getCandidatesCount","call","i","candidate","cId","cName","cSlogan","cVoteCount","push","id","name","slogan","voteCount","console","log"],"sources":["/Users/ozshmuel/Desktop/Google Drive/CS/שנה ג/סמסטר ב׳/blockchain/project/election/client/src/components/Candidates/index.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useContext } from 'react';\nimport useEth from \"../../contexts/EthContext/useEth\";\n// import CandidatesContext from '../../contexts/CandidatesContext/CandidatesContext';\n\n\nfunction Candidates() {\n\n    const { state: { contract } } = useEth();\n    const [candidates, setCandidates] = useState([]);\n\n    // const { candidates, setCandidates} = useContext(CandidatesContext);\n\n\n    const readCandidates = async () => {\n        \n        const candidatesCount = await contract.methods.getCandidatesCount().call(); \n\n        for (let i=1; i<= candidatesCount; i++){\n            const candidate = await contract.methods.candidates(i).call();\n            const cId = candidate[0]\n            const cName = candidate[1];\n            const cSlogan = candidate[2];\n            const cVoteCount = candidate[3];\n            setCandidates(candidates\n                .push({ id: cId, name: cName, slogan: cSlogan, voteCount: cVoteCount}));        \n        }\n\n        // readCandidates();\n            // setTest({\n            //     id: candidate[0].toNumber(),\n            //     name: candidate[1],\n            //     slogan: candidate[2],\n            // });\n            // console.log(test);\n            // return test;\n\n        console.log(candidates);\n        \n    } \n\n\n  return (\n      <div>\n          {/* <CandidatesContext.Provider value={{ candidates, setCandidates}}>\n\n          </CandidatesContext.Provider> */}\n          <h2>GetCandidates</h2>\n          <button onClick={readCandidates}>\n              GetCandidates()\n          </button>\n          {/* {test && <p>JSON.stringify(test) </p>} */}\n        </div>\n  )\n}\n\nexport default Candidates"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,kCAAnB,C,CACA;;;;AAGA,SAASC,UAAT,GAAsB;EAAA;;EAElB,MAAM;IAAEC,KAAK,EAAE;MAAEC;IAAF;EAAT,IAA0BH,MAAM,EAAtC;EACA,MAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C,CAHkB,CAKlB;;EAGA,MAAMQ,cAAc,GAAG,YAAY;IAE/B,MAAMC,eAAe,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiBC,kBAAjB,GAAsCC,IAAtC,EAA9B;;IAEA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAGJ,eAAlB,EAAmCI,CAAC,EAApC,EAAuC;MACnC,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACK,OAAT,CAAiBJ,UAAjB,CAA4BO,CAA5B,EAA+BD,IAA/B,EAAxB;MACA,MAAMG,GAAG,GAAGD,SAAS,CAAC,CAAD,CAArB;MACA,MAAME,KAAK,GAAGF,SAAS,CAAC,CAAD,CAAvB;MACA,MAAMG,OAAO,GAAGH,SAAS,CAAC,CAAD,CAAzB;MACA,MAAMI,UAAU,GAAGJ,SAAS,CAAC,CAAD,CAA5B;MACAP,aAAa,CAACD,UAAU,CACnBa,IADS,CACJ;QAAEC,EAAE,EAAEL,GAAN;QAAWM,IAAI,EAAEL,KAAjB;QAAwBM,MAAM,EAAEL,OAAhC;QAAyCM,SAAS,EAAEL;MAApD,CADI,CAAD,CAAb;IAEH,CAZ8B,CAc/B;IACI;IACA;IACA;IACA;IACA;IACA;IACA;;;IAEJM,OAAO,CAACC,GAAR,CAAYnB,UAAZ;EAEH,CAzBD;;EA4BF,oBACI;IAAA,wBAII;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI;MAAQ,OAAO,EAAEE,cAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYD;;GAhDQL,U;UAE2BD,M;;;KAF3BC,U;AAkDT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}